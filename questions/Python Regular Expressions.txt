1. Which module in Python supports regular expressions?
a) re
b) regex
c) pyregex
d) none of the mentioned


Answer: a
Explanation: re is a part of the standard library and can be imported using: import re.



2. Which of the following creates a pattern object?
a) re.create(str)
b) re.regex(str)
c) re.compile(str)
d) re.assemble(str)


Answer: c
Explanation: It converts a given string into a pattern object.



3. What does the function re.match do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned


Answer: a
Explanation: It will look for the pattern at the beginning and return None if it isn’t found.



4. What does the function re.search do?
a) matches a pattern at the start of the string
b) matches a pattern at any position in the string
c) such a function does not exist
d) none of the mentioned


Answer: b
Explanation: It will look for the pattern at any position in the string.



(Python Regular Expressions) 5. What will be the output of the following Python code?

sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.groups())

a) (‘we’, ‘are’, ‘humans’)
b) (we, are, humans)
c) (‘we’, ‘humans’)
d) ‘we are humans’


Answer: a
Explanation: This function returns all the subgroups that have been matched.



(Python Regular Expressions) 6. What will be the output of the following Python code?

sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group())

a) (‘we’, ‘are’, ‘humans’)
b) (we, are, humans)
c) (‘we’, ‘humans’)
d) ‘we are humans’


Answer: d
Explanation: This function returns the entire match.



(Python Regular Expressions) 7. What will be the output of the following Python code?

sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group(2))

a) ‘are’
b) ‘we’
c) ‘humans’
d) ‘we are humans’


Answer: c
Explanation: This function returns the particular subgroup.



(Python Regular Expressions) 8. What will be the output of the following Python code?

sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groupdict())

a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’


Answer: a
Explanation: This function returns a dictionary that contains all the matches.



(Python Regular Expressions) 9. What will be the output of the following Python code?

sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.groups())

a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’


Answer: b
Explanation: This function returns all the subgroups that have been matched.



(Python Regular Expressions) 10. What will be the output of the following Python code?

sentence = 'horses are fast'
regex = re.compile('(?P<animal>\w+) (?P<verb>\w+) (?P<adjective>\w+)')
matched = re.search(regex, sentence)
print(matched.group(2))

a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}
b) (‘horses’, ‘are’, ‘fast’)
c) ‘horses are fast’
d) ‘are’


Answer: d
Explanation: This function returns the particular subgroup.